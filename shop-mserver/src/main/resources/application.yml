server:
  port: 80
  context-path: /shop-mserver
  tomcat-uri-encoding: UTF-8

spring:
  redis:
    host: localhost
    port: 6379
    pool:
      max-idle: 8
      min-idle: 0
      max-active: 8
      max-wait: -1
    timeout: 0
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://123.249.28.234:3306/wchat_shop?useUnicode=true&characterEncoding=utf8&useSSL=true
    username: root
    password: 123456

    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

    #druid filter 信息配置
    allow: 192.168.2.25,127.0.0.1
    deny: 192.168.2.25
    loginUsername: tanshuai
    loginPassword: tanshuai
    resetEnable: false

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest


mybatis.configuration.call-setters-on-nulls: true #mybatis 返回Map 显示null
keywords_api_url: http://localhost:808
login_test: true
default:
  redirect_url: https://wodesh.cn/pay.html
  wchat_token_open: false
  pay_callback: http://wodesh.cn/shop-mserver/rest/pay/callback
  wchat_sendmessage_user: owF-Kw_dNmnrDON7ZGz8VDP3p7k4